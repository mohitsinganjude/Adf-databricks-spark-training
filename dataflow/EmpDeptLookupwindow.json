{
	"name": "EmpDeptLookupwindow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Emp_dataset",
						"type": "DatasetReference"
					},
					"name": "Employee"
				},
				{
					"dataset": {
						"referenceName": "DeptData",
						"type": "DatasetReference"
					},
					"name": "DeptDataset"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Empdeptlookupset",
						"type": "DatasetReference"
					},
					"name": "EmpDeptLookupdate"
				}
			],
			"transformations": [
				{
					"name": "empdeptlookup"
				},
				{
					"name": "window1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          employee_id as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          age as string,",
				"          email as string,",
				"          job_title as string,",
				"          department as string,",
				"          salary as string,",
				"          hire_date as string,",
				"          department_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Employee",
				"source(output(",
				"          department_ID as string,",
				"          department_code as string,",
				"          department_head as string,",
				"          department_budget as string,",
				"          department_location as string,",
				"          department_phone as string,",
				"          department_email as string,",
				"          department_creation_date as string,",
				"          department_description as string,",
				"          department_employee_count as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DeptDataset",
				"Employee, DeptDataset lookup(Employee@department_id == DeptDataset@department_ID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> empdeptlookup",
				"empdeptlookup window(over(department),",
				"     asc(age, true),",
				"     salary = max(salary)) ~> window1",
				"window1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Index as string,",
				"          {Customer Id} as string,",
				"          {First Name} as string,",
				"          {Last Name} as string,",
				"          Company as string,",
				"          City as string,",
				"          Country as string,",
				"          {Phone 1} as string,",
				"          {Phone 2} as string,",
				"          Email as string,",
				"          {Subscription Date} as string,",
				"          Website as string,",
				"          MaskedPhone1 as string,",
				"          MaskedPhone2 as string,",
				"          unmaskedPhone1 as string,",
				"          Age as string",
				"     ),",
				"     filePattern:'Emp_dept_lookup',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> EmpDeptLookupdate"
			]
		}
	}
}