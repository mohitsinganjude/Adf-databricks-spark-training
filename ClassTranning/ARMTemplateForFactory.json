{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ClassTranning"
		},
		"adftraningsession1_blob_employeedata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'adftraningsession1_blob_employeedata'"
		},
		"employeedb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'employeedb'",
			"defaultValue": "AccountEndpoint=https://employeedatastorage.documents.azure.com:443/;Database=organization"
		},
		"cosmodbemployee_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://ClassTranningADF.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Connection_with_cosmo_DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load_Data_CSV_to_cosmo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "employee_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-09T09:16:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/employee_csv')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEach_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CountryLookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Country",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "CountryLookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('CountryLookup').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 3,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "webaactivity",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-12T15:58:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Country')]",
				"[concat(variables('factoryId'), '/pipelines/webaactivity')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emp_dept_multiple_action')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "union_activity",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "empunionderived",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"empdataset1": {},
									"empdataset2": {},
									"empunionresultset": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Lookupwindows",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "empunionderived",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"empdataset1": {},
									"empdataset2": {},
									"empunionresultset": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-12T15:37:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/empunionderived')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employee_department_operation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "emp_dept_op",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "deptdataset",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"empdataset": {},
									"deptdataset": {},
									"empdeptresult": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-10T18:16:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/deptdataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookuppipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(1, 2)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "deptdataset",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "deptdataset",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"empdataset": {},
												"deptdataset": {},
												"empdeptresult": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-12T13:11:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/deptdataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/maskingpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "customermasking",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Customer_masked_data",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"customerdataset": {},
									"CustomerMaskeddata": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-12T15:37:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Customer_masked_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/webaactivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Webrestapicall",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://api.restful-api.dev/objects",
							"body": {
								"name": "Apple MacBook Pro 16",
								"data": {
									"year": 2025,
									"price": 1849.99,
									"CPU model": "Intel Core i9",
									"Hard disk size": "1 TB"
								}
							}
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "maskingpipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-12T15:52:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/maskingpipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "employeedb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "Employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/employeedb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CostomerMaskedData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adftraningsession1_blob_employeedata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Employee_Destination_data",
						"container": "tblemployeedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adftraningsession1_blob_employeedata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Country')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adftraningsession1_blob_employeedata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Country.csv",
						"folderPath": "Employee_Source_data",
						"container": "tblemployeedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Cuntry",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adftraningsession1_blob_employeedata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/custdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adftraningsession1_blob_employeedata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "customers-100.csv",
						"folderPath": "Employee_Source_data",
						"container": "tblemployeedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Customer Id",
						"type": "String"
					},
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Company",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Phone 1",
						"type": "String"
					},
					{
						"name": "Phone 2",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Subscription Date",
						"type": "String"
					},
					{
						"name": "Website",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adftraningsession1_blob_employeedata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deptdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "employeedb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"empId": {
							"type": "string"
						},
						"departmentName": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "department"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/employeedb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/empdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "employeedb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"empId": {
							"type": "string"
						},
						"empName": {
							"type": "string"
						},
						"empLocation": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/employeedb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/empdept')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "employeedb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"empId": {
							"type": "string"
						},
						"departmentName": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "department"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/employeedb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/empdeptresultdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adftraningsession1_blob_employeedata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Employee_Destination_data",
						"container": "tblemployeedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adftraningsession1_blob_employeedata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employee_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adftraningsession1_blob_employeedata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "customers-100.csv",
						"folderPath": "Employee_Source_data",
						"container": "tblemployeedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Customer Id",
						"type": "String"
					},
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Company",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Phone 1",
						"type": "String"
					},
					{
						"name": "Phone 2",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Subscription Date",
						"type": "String"
					},
					{
						"name": "Website",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adftraningsession1_blob_employeedata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/empunionresultset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adftraningsession1_blob_employeedata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Employee_Destination_data",
						"container": "tblemployeedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adftraningsession1_blob_employeedata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adftraningsession1_blob_employeedata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('adftraningsession1_blob_employeedata_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cosmodbemployee')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('cosmodbemployee_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/employeedb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('employeedb_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "cosmodbemployee",
							"type": "LinkedServiceReference"
						},
						"secretName": "cosmodbemployeekey",
						"secretVersion": "e38970fcb1274cc5a1628a12a6df521c"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cosmodbemployee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customer_masked_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "custdataset",
								"type": "DatasetReference"
							},
							"name": "customerdataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CostomerMaskedData",
								"type": "DatasetReference"
							},
							"name": "CustomerMaskeddata"
						}
					],
					"transformations": [
						{
							"name": "MaskedPhoneNumber"
						},
						{
							"name": "unmaskedPhone1"
						},
						{
							"name": "AgeCastNumber"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Index as string,",
						"          {Customer Id} as string,",
						"          {First Name} as string,",
						"          {Last Name} as string,",
						"          Company as string,",
						"          City as string,",
						"          Country as string,",
						"          {Phone 1} as string,",
						"          {Phone 2} as string,",
						"          Email as string,",
						"          {Subscription Date} as string,",
						"          Website as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> customerdataset",
						"customerdataset derive(MaskedPhone1 = toBase64({Phone 1}),",
						"          MaskedPhone2 = toBase64({Phone 2},'UTF-16')) ~> MaskedPhoneNumber",
						"MaskedPhoneNumber derive(unmaskedPhone1 = fromBase64(MaskedPhone2, 'UTF-16'),",
						"          Age = toString('30')) ~> unmaskedPhone1",
						"unmaskedPhone1 cast(output(",
						"          Age as integer '000'",
						"     ),",
						"     errors: true) ~> AgeCastNumber",
						"AgeCastNumber sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> CustomerMaskeddata"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/custdataset')]",
				"[concat(variables('factoryId'), '/datasets/CostomerMaskedData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deptdataset')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "empdataset",
								"type": "DatasetReference"
							},
							"name": "empdataset"
						},
						{
							"dataset": {
								"referenceName": "deptdataset",
								"type": "DatasetReference"
							},
							"name": "deptdataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empdeptresultdataset",
								"type": "DatasetReference"
							},
							"name": "empdeptresult",
							"rejectedDataLinkedService": {
								"referenceName": "adftraningsession1_blob_employeedata",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          empId as string,",
						"          empName as string,",
						"          empLocation as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'document',",
						"     systemColumns: false) ~> empdataset",
						"source(output(",
						"          empId as string,",
						"          departmentName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'document') ~> deptdataset",
						"empdataset, deptdataset join(empdataset@empId == deptdataset@empId,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     filePattern:'empdeptresultset',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> empdeptresult"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/empdataset')]",
				"[concat(variables('factoryId'), '/datasets/deptdataset')]",
				"[concat(variables('factoryId'), '/datasets/empdeptresultdataset')]",
				"[concat(variables('factoryId'), '/linkedServices/adftraningsession1_blob_employeedata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/empunionderived')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "employee_csv",
								"type": "DatasetReference"
							},
							"name": "empdataset1"
						},
						{
							"dataset": {
								"referenceName": "employee_csv",
								"type": "DatasetReference"
							},
							"name": "empdataset2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "empunionresultset",
								"type": "DatasetReference"
							},
							"name": "empunionresultset"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "insertiondate"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Index as string,",
						"          {Customer Id} as string,",
						"          {First Name} as string,",
						"          {Last Name} as string,",
						"          Company as string,",
						"          City as string,",
						"          Country as string,",
						"          {Phone 1} as string,",
						"          {Phone 2} as string,",
						"          Email as string,",
						"          {Subscription Date} as string,",
						"          Website as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> empdataset1",
						"source(output(",
						"          Index as string,",
						"          {Customer Id} as string,",
						"          {First Name} as string,",
						"          {Last Name} as string,",
						"          Company as string,",
						"          City as string,",
						"          Country as string,",
						"          {Phone 1} as string,",
						"          {Phone 2} as string,",
						"          Email as string,",
						"          {Subscription Date} as string,",
						"          Website as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> empdataset2",
						"empdataset1, empdataset2 union(byName: true)~> union1",
						"union1 derive(Inserttion_date = currentDate()) ~> insertiondate",
						"insertiondate sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> empunionresultset"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/employee_csv')]",
				"[concat(variables('factoryId'), '/datasets/empunionresultset')]"
			]
		}
	]
}